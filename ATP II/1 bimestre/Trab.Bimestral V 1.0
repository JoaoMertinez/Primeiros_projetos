#include<stdio.h> // Biblioteca principal
#include<conio2.h> // Biblioteca para utilizar moldura
#include<string.h> // Biblioteca para manipulação de strings
#include<stdlib.h> // Biblioteca que converte string para numero
#include<ctype.h>

#define TF 2

//Struct com as datas de validade
struct TpValidade
{
	int dia, mes, ano;
};


//Struct com as datas de venda
struct TpData
{
	int dia, mes, ano;
};

//Struct com as informações dos produtos
struct TpProdutos
{
	int cod, estoque;
	char descr[30];
	float preco;
	
	TpValidade validade;
};

//Struct com as informações dos fornecedores
struct TpFornecedor
{
	int codForn;
	char nomeForn[30], cidade[30];
};

//Struct com as informações dos clientes
struct TpCliente
{
	int cpf, qtdeCompra;
	char nomeCliente[30];
	float valorTotCompr; 
};

//Struct com as informações das vendas
struct TpVendas
{
	int codVenda; //CodVenda tem que ser sequencial
	float totVenda;
};

//Struct com as informações das vendas dos produtos
struct TpVendaProd
{
	int qtde;
	float valorUni;
};

void Inseredados(TpProdutos TabProd[TF],int &TLP)//Dados para teste
{
	TabProd[TLP].cod = 5000;
	strcpy(TabProd[TLP].descr,"Arroz");
	TabProd[TLP].estoque = 40;
	TabProd[TLP].preco = 35;
	TabProd[TLP].validade.dia = 19;
	TabProd[TLP].validade.mes = 8;
	TabProd[TLP].validade.ano = 2025;
	TLP++;
	
	TabProd[TLP].cod = 4000;
	strcpy(TabProd[TLP].descr,"Feijao");
	TabProd[TLP].estoque = 20;
	TabProd[TLP].preco = 15;
	TabProd[TLP].validade.dia = 15;
	TabProd[TLP].validade.mes = 8;
	TabProd[TLP].validade.ano = 2025;
	TLP++;
	
	TabProd[TLP].cod = 6000;
	strcpy(TabProd[TLP].descr,"Merda");
	TabProd[TLP].estoque = 10;
	TabProd[TLP].preco = 105;
	TabProd[TLP].validade.dia = 5;
	TabProd[TLP].validade.mes = 8;
	TabProd[TLP].validade.ano = 2023;
	TLP++;
	
	gotoxy(30,6);
	printf("\n*** Dados inseridos! ***\n");
	getch();
}
void LimpaTela(void)
{
	 int x,y;
	 //LIMPA QUADRADO
	 for(x=30;x<=78;x++)
	 {
		for(y=6;y<=20;y++)
		{
		   gotoxy(x,y);
		   printf(" ");
		}
	 }
	 //LIMPA MENSAGEM
	 for(x=13;x<78;x++)
	 {
	 	gotoxy(x,23);
		printf("  ");
	 }
}

//Função que faz a busca pelo codigo do produto
int buscaCod(TpProdutos Tab[TF], int tl, int codProd)
{
	int pos=0;
	
	while(pos<tl && codProd!=Tab[pos].cod)
		pos++;
	
	if(pos<tl)
		return pos;
	else
		return -1;
}

//Função que cadastra o produto
void cadProd(TpProdutos TabProd[TF], int &tlp)
{
	int auxCod, pos;
	
	LimpaTela();
	
	gotoxy(30,6);
	printf("*** Cadastro de Produtos ***");
	gotoxy(30,8);
	printf("Codigo do Produto: ");
	scanf("%d",&auxCod);
	while(tlp<TF && auxCod>0)
	{
		pos = buscaCod(TabProd,tlp,auxCod);
		if (pos==-1)
		{
			TabProd[tlp].cod = auxCod;
			gotoxy(30,9);
			printf("Descricao do Produto: ");
			fflush(stdin);
			gets(TabProd[tlp].descr);
			gotoxy(30,10);
			printf("Quantidade em Estoque: ");
			scanf("%d",&TabProd[tlp].estoque);
			gotoxy(30,11);
			printf("Preco: ");
			scanf("%f",&TabProd[tlp].preco);
			gotoxy(30,12);
			printf("Data de Validade dd/mm/aa: ");
			scanf("%d",&TabProd[tlp].validade.dia);
			gotoxy(30,13);
			scanf("%d",&TabProd[tlp].validade.mes);
			gotoxy(30,14);
			scanf("%d",&TabProd[tlp].validade.ano);
			tlp++;
		}
		else
		{
			LimpaTela();
			gotoxy(13,23);
			printf("Produto Cadastrado!");
			gotoxy(30,9);
			printf("Produto[%d] - Descricao: [%s]",pos,TabProd[pos].descr);
			getch();
		}
		
		LimpaTela();
		gotoxy(30,6);
		printf("** Cadastro de Produtos **");
		if(tlp<TF)
		{
			gotoxy(30,8);
			printf("Codigo do Produto: ");
			scanf("%d",&auxCod);
		}
	}
	
	if(auxCod==0)//mostrando que nao pode
	{
		LimpaTela();
		gotoxy(13,23);
		printf("Codigo invalido");
		getch();
			
	}
	
	//Se caso a tabela já estiver cheia e o usario tentar cadastrar denovo
	if(tlp==TF)
	{
		LimpaTela();
		gotoxy(13,23);
		printf("Tabela cheia!");
		getch();//para voltar ao menu
	}
}

//Função que faz consulta do produto atraves do codigo
void ConsultaProd(TpProdutos TabProd[TF], int tlp)
{
	int auxCod, pos;
	
	LimpaTela();
	gotoxy(30,6);
	printf("*** Consulta de produto ***");
	
	gotoxy(30,8);
	printf("Digite o codigo para consulta: ");
	scanf("%d",&auxCod);
	
	pos = buscaCod(TabProd,tlp,auxCod);
	
	if(pos == -1)
	{
		gotoxy(13,23);
		printf("O produto nao foi encontrado!");
		getch();
		LimpaTela();
	}
	else
	{
		LimpaTela();
		gotoxy(30,8);
		printf("Codigo do produto: %d",TabProd[pos].cod);
		gotoxy(30,9);
		printf("Descricao: %s",TabProd[pos].descr);
		gotoxy(30,10);
		printf("Estoque: %d",TabProd[pos].estoque);
		gotoxy(30,11);
		printf("Preco: %.2f",TabProd[pos].preco);
		gotoxy(30,12);
		printf("validade: %d/%d/%d",TabProd[pos].validade.dia,TabProd[pos].validade.mes,TabProd[pos].validade.ano);
		getch();
		LimpaTela();
	}
}

//Função da moldura
void moldura(int CI, int LI, int CF, int LF, int CorT, int CorF)
{
	int i;
	textcolor(CorT);
	textbackground(CorF);
	gotoxy(CI,LI);
	printf("%c",201);
	gotoxy(CI,LF);
	printf("%c",200);
	gotoxy(CF,LI);
	printf("%c",187);
	gotoxy(CF,LF);
	printf("%c",188);
	for(i=CI+1; i<CF; i++)
	{
		gotoxy(i,LI); printf("%c",205);
		gotoxy(i,LF); printf("%c",205);
	}
	for(i=LI+1; i<LF; i++)
	{
		gotoxy(CI,i); printf("%c",186);
		gotoxy(CF,i); printf("%c",186);
	}
	
	textcolor(7);
	textbackground(0);
}

//Função com o menu principal
void menuPrincipal(void)
{
	textcolor(15);
	gotoxy(3,7);
	printf("# #  M E N U  # #");
	gotoxy(3,9);
	printf("[P] Produtos");
	gotoxy(3,10);
	printf("[C] Clientes");
	gotoxy(3,11);
	printf("[F] Fornecedores");
	gotoxy(3,12);
	printf("[I] Inserir dados");
	gotoxy(3,19);
	printf("[ESC] Sair");
}

//Função que passa os valores da moldura
void Formulario(void)
{
	system("cls");
	moldura(1,1,80,25,10,5);
	gotoxy(27,3);
	textcolor(15);
	printf(" # # #  T I T U L O  # # #");
	
	moldura(2,2,79,4,14,1);
	moldura(2,5,27,21,12,7);
	menuPrincipal();
	moldura(2,22,79,24,11,4);
	gotoxy(4,23);
	textcolor(10);
	printf("Mensagem: ");

	moldura(28,5,79,21,9,6);
}

//Função do menu de opção para o usuario escolher
char menu(void)
{
	LimpaTela();
	gotoxy(30,6);
	printf("# # #  M E N U  # # #\n");
	gotoxy(30,8);
	printf("[A] Cadastrar Produtos");
	gotoxy(30,9);
	printf("[B] Consultar Produtos");
	gotoxy(30,10);
	printf("[C] Excluir Produtos");
	gotoxy(30,11);
	printf("[D] Alteracao de Dados");
	gotoxy(30,12);
	printf("[E] Relatorio de Produtos");
	gotoxy(30,13);
	printf("[F] Vender Produtos");
	gotoxy(30,14);
	printf("[G] Insercao dos dados");
	gotoxy(30,15);
	printf("[H] Aumento de preco por fornecedor");
	gotoxy(30,16);
	printf("[I] Exclusao de Vendas");
	gotoxy(30,17);
	printf("[ESC] Sair\n");
	gotoxy(30,19);
	printf("Opcao desejada: ");
	return toupper(getche());
}

//Main onde o código vai começar
int main(void)
{
	//Declarando a struct de produto
	TpProdutos prod[TF];
	
	int tl=0;
	char op;
	
	Formulario();
	
	do
	{
		//Repetição para que obrigue o usario a digitar uma das opções
		op = toupper(getch());
		while(op != 'P' && op != 'C' && op != 'F' && op != 27 && op != 'I')
			op = toupper(getch());
		switch(op)
		{
			case 'P':
				op = menu();
				switch(op)
				{
					case 'A':
						cadProd(prod,tl);
						break;
				
					case 'B':
						ConsultaProd(prod,tl);
						break;
						
				}
				break;
				
				
			case 'I':
				Inseredados(prod,tl);
				break;
				
			//Mensagem para quando o usario quiser sair do programa
			case 27:
				gotoxy(13,23);
				printf("Programa encerrado!");
				getch();
				break;
		}
	}while(op!=27);
	
	
	return 0;
}
